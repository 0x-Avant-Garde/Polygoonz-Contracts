{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD3b4aDD36553CafF9eBD027441522caA326D14C6",
    "txHash": "0x4da90a9e38ec895a6f2de23e04134bd42f8e6785aa1c535660c1e2a15fd96dc0",
    "deployTransaction": {
      "hash": "0x4da90a9e38ec895a6f2de23e04134bd42f8e6785aa1c535660c1e2a15fd96dc0",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x960Eb4ca782499a9B4Aee9Bad3554428660fCdaf",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x0938580c02"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x0938580bf6"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x0938580c02"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xcdc62da30cc12fe530fd6bc3c39a54dea67185c3e1d550d914b47409993a4a14",
      "s": "0x0f7fd505e3cd2f0d34acc71b465d25125c372b9cfe27bb9a30b343c4a5afa210",
      "v": 0,
      "creates": "0xD3b4aDD36553CafF9eBD027441522caA326D14C6",
      "chainId": 137
    }
  },
  "proxies": [
    {
      "address": "0x064B05df5cfe5686814d773bF1369251Cc3752be",
      "txHash": "0x36789c19b83dca220dd876f38386072f0b15206abd227e81bd7563b60ee59310",
      "kind": "transparent"
    },
    {
      "address": "0xeFfAcE9d60A8647fd408598D18b86D41D26C0Cd1",
      "txHash": "0x2d57f75ceff1be740a06463e78e6cb705f9f2f962c68f87daecb3683647f660d",
      "kind": "transparent"
    },
    {
      "address": "0xEf73119d4eA3fB47013e03F10f0B74Bb6a6a8F0b",
      "txHash": "0xf8a5c12c3cceb67ff89a127dfbd477e5bb952bed64bd8a657df51c45728e0a13",
      "kind": "transparent"
    },
    {
      "address": "0xDd90F6527067e731E121044f638d413217EEF8fc",
      "txHash": "0xa148b29d183cb6564e1e095b079b9286b8b7f812e0703ad00b73d5ad8b031265",
      "kind": "transparent"
    },
    {
      "address": "0x0F1DF6043Cf247BAb7B1fA434cb6aCe8E8c9E739",
      "txHash": "0x94ad550750391fbdfeeca1b0bb741e1a6f0d5698458dd7ba9b5f63093c56e7e2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "334ce887a57c75ec15f45c0bc707e0b673dabdf3b8cfc8d57fbb6682d2e20f09": {
      "address": "0x90642574a73c78de1b7E0fD80Dff7519e06EA9B3",
      "txHash": "0xe73e02526b97307f7f189d19cfaa6e82cb340d59854eee07db675c56ef0b655a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "GoonzPals",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\Pals.sol:15"
          },
          {
            "contract": "GoonzPals",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\Pals.sol:16"
          },
          {
            "contract": "GoonzPals",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\Pals.sol:17"
          },
          {
            "contract": "GoonzPals",
            "label": "power",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Pals.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c3d1552444a4616aa3e21fbd5606b24ae93175d76fbc770acf19e37522cdb603": {
      "address": "0x2042B645A13212C2520ACd2D342AFE5f30186A5e",
      "txHash": "0x46cd78453f0d415ae716e1f467ac2754885619330963a4c33f7f32da92058cf8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "GoonzPals",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\Pals.sol:15"
          },
          {
            "contract": "GoonzPals",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\Pals.sol:16"
          },
          {
            "contract": "GoonzPals",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\Pals.sol:17"
          },
          {
            "contract": "GoonzPals",
            "label": "power",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Pals.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cbc8cf16c4772b33732b6bc75187231c306ee9dd7c64206c8f6613fed38fc51a": {
      "address": "0x14bE0Eb14007be72A636380a86b9a94F84f20916",
      "txHash": "0xca6d467c10d2d01e2e5d24010f83d5d6a9013004c37e18e042ed5dddb35f6b43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "GoonzItems",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzItems.sol:20"
          },
          {
            "contract": "GoonzItems",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzItems.sol:21"
          },
          {
            "contract": "GoonzItems",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzItems.sol:22"
          },
          {
            "contract": "GoonzItems",
            "label": "itemInfoTracker",
            "type": "t_mapping(t_uint256,t_struct(ItemInfo)4685_storage)",
            "src": "contracts\\GoonzItems.sol:23"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(ItemInfo)4685_storage)": {
            "label": "mapping(uint256 => struct GoonzItems.ItemInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ItemInfo)4685_storage": {
            "label": "struct GoonzItems.ItemInfo",
            "members": [
              {
                "label": "power",
                "type": "t_uint256"
              },
              {
                "label": "layer",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "78d578caa918f32eaee9dc8067cbf4eeb92cacf3dd1060ff20e18e2e1eb1e214": {
      "address": "0xb03d5a51a77Ea91C33c7b94615c8633EfFDcF6af",
      "txHash": "0xd45f9aab0970bb036abd3dcf98a87580342ae6f048d5fcad4d48a47f38c44456",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5114",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5114": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "89e6f4ac4cc10bb604c0a2ba19558a22c992002251be3a9d51ac6bbafc44022b": {
      "address": "0x6244697F2d5D2E61BbB437aA1524179DEcDd4b1F",
      "txHash": "0x5a8e0bb40faab59ce922df3433935966045ab0c7e390bd2a4af35f04155489f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5140",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5140": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "445eb55de75ccaf38062bc51d34a238c142e23ab332f67d11f340b6d390ef2f9": {
      "address": "0x9Db9e16627E40C211B9A502e0C39380cb1E62D6b",
      "txHash": "0x7db475621c97a4967ee674141707f9c51fe036103873252782475553f972e919",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5104",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5104": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "926aad43554c6aa2b77719a6b089cf00b7c44ec3999c271ad6bc0357a1258969": {
      "address": "0xEA614AE5eE76DfD29a14eA82242De5D292269c9b",
      "txHash": "0xff8aec5ab0771ec2fb325d0797e664285451747e908d2a8fbbf8de4934601034",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "GoonzItems",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzItems.sol:20"
          },
          {
            "contract": "GoonzItems",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzItems.sol:21"
          },
          {
            "contract": "GoonzItems",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzItems.sol:22"
          },
          {
            "contract": "GoonzItems",
            "label": "itemInfoTracker",
            "type": "t_mapping(t_uint256,t_struct(ItemInfo)4675_storage)",
            "src": "contracts\\GoonzItems.sol:23"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(ItemInfo)4675_storage)": {
            "label": "mapping(uint256 => struct GoonzItems.ItemInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ItemInfo)4675_storage": {
            "label": "struct GoonzItems.ItemInfo",
            "members": [
              {
                "label": "power",
                "type": "t_uint256"
              },
              {
                "label": "layer",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e3971db4297d0b3063fa0b25177b3dc687ee971b25a8e4cd53d15d17c679ff1": {
      "address": "0x103CFFb3805E7B321d9f710Fb96979f7d306F832",
      "txHash": "0x00a435964fd636b964525438c821b198e584a304ada13f2d7e3abef8cc114a97",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5104",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5104": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "b40462b3bfd0d65db11a20fd3ca92f1b4ed0630d1e3e01a6ad70da1e13707ca2": {
      "address": "0xD8a7e7fbc656FdfB55c9F91Cff69b1c45F1BF0f1",
      "txHash": "0x1fb288cbfc9a76a9582181c506212a71a4f605fcd4c82c38c26c85824326cce9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5131",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          },
          {
            "contract": "GoonzBases",
            "label": "totalGiveaway",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:45"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5131": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "85c313f22c12f3f3fefdc4ee88a562e0e61e406b91499aeeafd8f0b0dad63a71": {
      "address": "0xEa1999967a9169f52F64FD0Fe02560Dbc44cD30F",
      "txHash": "0x52fbee6be3ce6326e3241a56ae7962b3bb9cc586bbee7fc4f8411e941f3a6c16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5136",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          },
          {
            "contract": "GoonzBases",
            "label": "totalGiveaway",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:45"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawaysClaimed",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5136": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "f358452ffa621636e06b3d5a509c6954fa2a9048d64305d545f488e8e8f3a44d": {
      "address": "0x090c8f0e05fa67a6c1dC240F0CFF74B67e154fAd",
      "txHash": "0x8381c74f694b03eb894c046d77239ea3778e5d3494ff9c32d0a87d515c39dbb1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5162",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          },
          {
            "contract": "GoonzBases",
            "label": "totalGiveaway",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:45"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawaysClaimed",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5162": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "139ca8075b12aeb35bbe1f891e418e856c0239601819f335d62071e7606e8dd8": {
      "address": "0xFc195C328Ca33937f00598619645cDAD9fF9E262",
      "txHash": "0x78c4c83dfef2c1a0803a1a3f1ced6dc09b6ac989765be53b891b638bc99fe940",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5172",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          },
          {
            "contract": "GoonzBases",
            "label": "totalGiveaway",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:45"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawaysClaimed",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5172": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
