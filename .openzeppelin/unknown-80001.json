{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xEE493Fc634A7694Ab0996932D312265CB7a2271a",
    "txHash": "0x16b65f75c0bba3c70c005fb0c6708c0558afd022054e2e103abc34a38c075b50",
    "deployTransaction": {
      "hash": "0x16b65f75c0bba3c70c005fb0c6708c0558afd022054e2e103abc34a38c075b50",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xf2f75A4aD61e2C7E98D95288Cde7AB198AB3BC97",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x77359401"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x773593f9"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x77359401"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 671,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x84c4336a3a3b57aaffac98eec214c36a07e7698670ff21a603b339787653479e",
      "s": "0x42819f207150c6cfcfa40b89c1c7e7f30717e93639efb4dcd366145d93645073",
      "v": 0,
      "creates": "0xEE493Fc634A7694Ab0996932D312265CB7a2271a",
      "chainId": 80001
    }
  },
  "proxies": [
    {
      "address": "0x83a5030E0BcbdC1737dcafb07f23Ea5A2Fd34532",
      "txHash": "0x9745e3c2207b9d15fda708053742d76175a457b340df9e33f282adb6151d96fa",
      "kind": "transparent"
    },
    {
      "address": "0x27A5a49595851d10Dc80c29979CC02BdCFf571F2",
      "txHash": "0x9068ed64fc6989a6a60e9a281f8a31752aa11fae5ee9d3e459275a46099addce",
      "kind": "transparent"
    },
    {
      "address": "0xF1563e39f11227dbC222600330Fb8182aedA4c13",
      "txHash": "0x724bd6cb226abdda35f63f21d34b6f12f1a452796b0bb84e42301f6540af8a38",
      "kind": "transparent"
    },
    {
      "address": "0x0e80474F7A197846AE4e0e174BE1754FD6Fde512",
      "txHash": "0x6f4d13aa2a48c4cd830893759cbfee43bc3d01379287961e0018947c2d2151ad",
      "kind": "transparent"
    },
    {
      "address": "0xea6c7118d0B02963B43658676b6C239B1f604Ab6",
      "txHash": "0xc5cf79ac8cb8473b2123909854460f2b5045c77aa7aa57486806dbc09a51c0be",
      "kind": "transparent"
    },
    {
      "address": "0xD3b4aDD36553CafF9eBD027441522caA326D14C6",
      "txHash": "0xb33ca26cb4fa96ba0443dd96df4475b81c53f64f0f76c8dc60cf3ba4c93c62c7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "61382baa0236d394eab3197e772490aa49ae871beac47bf941beff59f1eed171": {
      "address": "0x18181b514bc194245DEcc7bCE228a261Cb4E1a1e",
      "txHash": "0x0f8f59be5fd0c228f1afb1fab2aca195227aa41d58b42e5d324325e107c2d624",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "GoonzPals",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\Pals.sol:15"
          },
          {
            "contract": "GoonzPals",
            "label": "power",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Pals.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "55e5980a1fb77f2c7a7db847c6dad88bb1c0b6da38e4127fcc06f6fd06981a3f": {
      "address": "0xB4266318637F6DD2cf3Ec05AdB57ac7236083614",
      "txHash": "0xca2719a88a58da293006ad210f08f841adc90554852e6a4e567ad7dc7530d356",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "GoonzItems",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzItems.sol:20"
          },
          {
            "contract": "GoonzItems",
            "label": "itemInfoTracker",
            "type": "t_mapping(t_uint256,t_struct(ItemInfo)4658_storage)",
            "src": "contracts\\GoonzItems.sol:22"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(ItemInfo)4658_storage)": {
            "label": "mapping(uint256 => struct GoonzItems.ItemInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(ItemInfo)4658_storage": {
            "label": "struct GoonzItems.ItemInfo",
            "members": [
              {
                "label": "power",
                "type": "t_uint256"
              },
              {
                "label": "layer",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ace68e1aecf22ba3fc5d9877836b25f12a9422eadf6e003bb9ce15a0d471a551": {
      "address": "0x8C849b6C64a41eA4c9B411596e2a36c6732cd27e",
      "txHash": "0xdcc1ab38d7cc019bc0a18d27f1dbba3a9244cb4fa8ed237c8111daea377d7c69",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5052",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5052": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "88c1361812ccd034286eea574262fad82c7ca6e7b6602d60a9586d8143c0c1f1": {
      "address": "0x8dB38aC3E27b9040cC8Dc2060748893d32Ac468C",
      "txHash": "0xba063e5b70584ae12df18a644cb4283ef457937bc6eb69ff50eb428f1fc1bcf4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5052",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5052": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "5920194af1a840696a2a109b4ac9c1a78934bca2bce96f6d9e6c1063e470ca59": {
      "address": "0x01A0988DA77103f66A926Fb194164cbdDCdc2042",
      "txHash": "0x02feeae823ad106eb11b9328c31e97359fbb485893b3fd71276ab80617bacb62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5058",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5058": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "a6ad71c4a41a03b86df10285082152bd40b6bb791129c5d9c513a3ed7b7b18f0": {
      "address": "0x8363F12F1Ec1DAc8de0B554AeCa24574F1E39d04",
      "txHash": "0x797addfd77efd59ab35cfcab0f8acb01ba4fb5626865656b0ab56d94b1d62db5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "GoonzBases",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\GoonzBases.sol:21"
          },
          {
            "contract": "GoonzBases",
            "label": "cost",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:22"
          },
          {
            "contract": "GoonzBases",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:23"
          },
          {
            "contract": "GoonzBases",
            "label": "maxRegularMint",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:24"
          },
          {
            "contract": "GoonzBases",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:25"
          },
          {
            "contract": "GoonzBases",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\GoonzBases.sol:26"
          },
          {
            "contract": "GoonzBases",
            "label": "giveawayTracker",
            "type": "t_mapping(t_address,t_struct(Giveaway)3395_storage)",
            "src": "contracts\\GoonzBases.sol:28"
          },
          {
            "contract": "GoonzBases",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:30"
          },
          {
            "contract": "GoonzBases",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:31"
          },
          {
            "contract": "GoonzBases",
            "label": "teamWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:32"
          },
          {
            "contract": "GoonzBases",
            "label": "marketingWallet",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:33"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsContract",
            "type": "t_contract(IGoonzItems)5058",
            "src": "contracts\\GoonzBases.sol:35"
          },
          {
            "contract": "GoonzBases",
            "label": "goonzItemsAddress",
            "type": "t_address",
            "src": "contracts\\GoonzBases.sol:36"
          },
          {
            "contract": "GoonzBases",
            "label": "goonPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\GoonzBases.sol:39"
          },
          {
            "contract": "GoonzBases",
            "label": "goonItem",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\GoonzBases.sol:41"
          },
          {
            "contract": "GoonzBases",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts\\GoonzBases.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Giveaway)3395_storage)": {
            "label": "mapping(address => struct GoonzBases.Giveaway)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Giveaway)3395_storage": {
            "label": "struct GoonzBases.Giveaway",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "numberClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IGoonzItems)5058": {
            "label": "contract IGoonzItems"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "334ce887a57c75ec15f45c0bc707e0b673dabdf3b8cfc8d57fbb6682d2e20f09": {
      "address": "0x90642574a73c78de1b7E0fD80Dff7519e06EA9B3",
      "txHash": "0xb82481bebbb54b3dec059e01a180365ac93ddd9600952e25ffecae18c7af3e26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "GoonzPals",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\Pals.sol:15"
          },
          {
            "contract": "GoonzPals",
            "label": "devWallet",
            "type": "t_address",
            "src": "contracts\\Pals.sol:16"
          },
          {
            "contract": "GoonzPals",
            "label": "artistWallet",
            "type": "t_address",
            "src": "contracts\\Pals.sol:17"
          },
          {
            "contract": "GoonzPals",
            "label": "power",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Pals.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
